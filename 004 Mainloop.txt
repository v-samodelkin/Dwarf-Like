using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;

namespace Dwarf
{
    class Program
    {


        /// <summary>
        /// Set this static field to true to quit the game
        /// </summary>
        static bool quit = false;
        
        /// <summary>
        /// The entry point sets up the screen, initializes the game, and kicks off the main loop
        /// </summary>
        static void Main(string[] args)
        {
            // Make sure the game quits if the user hits ^C
            // Set Console.TreatControlCAsInput to true if you want to use ^C as a valid input value
            Console.CancelKeyPress += new ConsoleCancelEventHandler(Console_CancelKeyPress);

            Console.CursorVisible = false;

            /*** Initialize the game here! ***/

            MainLoop();
        }

        /// <summary>
        /// Event handler for ^C key press
        /// </summary>
        static void Console_CancelKeyPress(object sender, ConsoleCancelEventArgs e)
        {
            // Unfortunately, due to a bug in .NET Framework v4.0.30319 you can't debug this 
            // because Visual Studio 2010 gives a "No Source Available" error. 
            // http://connect.microsoft.com/VisualStudio/feedback/details/524889/debugging-c-console-application-that-handles-console-cancelkeypress-is-broken-in-net-4-0
            Console.WriteLine("{0} hit, quitting...", e.SpecialKey);
            quit = true;
            e.Cancel = true; // Set this to true to keep the process from quitting immediately
        }

        /// <summary>
        /// The main gameloop
        /// </summary>
        static void MainLoop()
        {
            int elapsedMilliseconds = 0;
            int totalMilliseconds = TIME_LIMIT_SECONDS * 1000;
            const int INTERVAL = 100;

            while (elapsedMilliseconds < totalMilliseconds && !quit)
            {
                // Sleep for a short period
                Thread.Sleep(INTERVAL);
                elapsedMilliseconds += INTERVAL;

                /*** Update the screen and handle input here! ***/
            }

            Console.WriteLine("Game over!");
        }
    }
}
